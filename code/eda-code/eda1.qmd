---
title: "Exploratory Data Analysis"
author: "Murtaza Yaqubi"
format: html
editor: visual
---



# Library/install libraries
```{r}
library(here)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(corrplot)
```



# EXPLORATORY DATA ANALYSIS (EDA)
```{r}
# Import the dataset
cardio_df <- read_csv(here("data", "raw-data", "Cardiovascular_Disease_Dataset.csv"))

# Transform variables into suitable types and add descriptive labels
cardio_df <- cardio_df %>%
  mutate(
    gender = factor(gender, levels = c(0, 1), labels = c("Female", "Male")), 
    chestpain = factor(chestpain, levels = c(0, 1, 2, 3),
                       labels = c("Typical Angina", "Atypical Angina", "Non-anginal Pain", "Asymptomatic")),
    fastingbloodsugar = factor(fastingbloodsugar, levels = c(0, 1), labels = c("False", "True")),
    restingrelectro = factor(restingrelectro, levels = c(0, 1, 2),
                             labels = c("Normal", "ST-T Abnormality", "Left Ventricular Hypertrophy")),
    exerciseangia = factor(exerciseangia, levels = c(0, 1), labels = c("No", "Yes")),
    slope = factor(slope, levels = c(1, 2, 3), labels = c("Upsloping", "Flat", "Downsloping")),
    target = factor(target, levels = c(0, 1), labels = c("No Heart Disease", "Heart Disease"))
  )

# Print the transformed dataset for verification
print(cardio_df)
```


# Calculate summary statistics for selected variables
```{r}
# Calculate summary statistics for selected variables
summary_stats <- cardio_df %>% 
  summarise(
    # Age statistics
    Age_min = min(age, na.rm = TRUE),
    Age_max = max(age, na.rm = TRUE),
    Age_mean = mean(age, na.rm = TRUE),
    Age_sd = sd(age, na.rm = TRUE),
    
    # Resting Blood Pressure statistics
    RestingBP_min = min(restingBP, na.rm = TRUE),
    RestingBP_max = max(restingBP, na.rm = TRUE),
    RestingBP_mean = mean(restingBP, na.rm = TRUE),
    RestingBP_sd = sd(restingBP, na.rm = TRUE),
    
    # Serum Cholesterol statistics (excluding zeros)
    SerumCholesterol_min = min(serumcholestrol[serumcholestrol > 0], na.rm = TRUE),
    SerumCholestrol_max = max(serumcholestrol, na.rm = TRUE),
    SerumCholestrol_mean = mean(serumcholestrol, na.rm = TRUE),
    SerumCholestrol_sd = sd(serumcholestrol, na.rm = TRUE),
    
    # Maximum Heart Rate statistics
    MaxHeartRate_min = min(maxheartrate, na.rm = TRUE),
    MaxHeartRate_max = max(maxheartrate, na.rm = TRUE),
    MaxHeartRate_mean = mean(maxheartrate, na.rm = TRUE),
    MaxHeartRate_sd = sd(maxheartrate, na.rm = TRUE),
    
    # Oldpeak statistics (excluding zeros)
    Oldpeak_min = min(oldpeak[oldpeak > 0], na.rm = TRUE),
    Oldpeak_max = max(oldpeak, na.rm = TRUE),
    Oldpeak_mean = mean(oldpeak, na.rm = TRUE),
    Oldpeak_sd = sd(oldpeak, na.rm = TRUE)
  )

# Print summary statistics
print(summary_stats)

summary_df = skimr::skim(summary_stats)
print(summary_stats)
# save to file
summarytable_file = here("results", "tables", "summarytable.rds")
saveRDS(summary_df, file = summarytable_file)
```


# Age distribution
```{r}
p1 <- ggplot(cardio_df, aes(x = age)) +
  geom_histogram(aes(y = ..density..), bins = 30, color = "black", fill = "steelblue", alpha = 0.5) +
  geom_density(color = "darkblue", linewidth = 1) +
  labs(title = "Age Distribution", x = "Age", y = "Density") +
  scale_x_continuous(breaks = seq(0, max(cardio_df$age, na.rm = TRUE) + 10, by = 10)) +
  theme_bw()
  
plot(p1)
figure_file = here("results", "figures","Age distribution.png")
ggsave(filename = figure_file, plot=p1) 
```  

# Serum Cholesterol distribution
```{r}
p2 <- ggplot(subset(cardio_df, serumcholestrol > 0), aes(x = serumcholestrol)) +
  geom_histogram(aes(y = ..density..), bins = 30, color = "black", fill = "forestgreen", alpha = 0.5) +
  geom_density(color = "darkgreen", linewidth = 1) +
  labs(title = "Serum Cholesterol Distribution", 
       x = "Serum Cholesterol (mg/dL)", y = "Density") +
  theme_minimal()

plot(p2)
figure_file = here("results", "figures","Serum Cholestrol.png")
ggsave(filename = figure_file, plot=p2) 
```

# Resting Blood Pressure distribution
```{r}
p3 <- ggplot(subset(cardio_df, restingBP > 0), aes(x = restingBP)) +
  geom_histogram(aes(y = ..density..), bins = 30, color = "black", fill = "maroon", alpha = 0.5) +
  geom_density(color = "darkred", linewidth = 1) +
  labs(title = "Resting Blood Pressure Distribution", 
       x = "Resting Blood Pressure (mmHG)", y = "Density") +
  theme_bw()

plot(p3)
figure_file = here("results", "figures","Resting Blood Pressure Distribution.png")
ggsave(filename = figure_file, plot=p3) 
```

# Boxplot for resting blood pressure by heart disease status
```{r}
p4 <- ggplot(cardio_df, aes(x = target, y = restingBP, fill = target)) +
  geom_boxplot() +
  labs(title = "Resting Blood Pressure by Heart Disease Status",
       x = "Heart Disease Status",
       y = "Resting Blood Pressure (mmHg)") +
  theme_minimal()

plot(p4)
figure_file = here("results", "figures","restingBP by heart disease status.png")
ggsave(filename = figure_file, plot=p4) 
```

# Violin plot for oldpeak by heart disease status
```{r}
p5 <- ggplot(cardio_df, aes(x = target, y = oldpeak, fill = target)) +
  geom_violin(trim = FALSE) +
  labs(title = "Oldpeak Distribution by Heart Disease Status",
       x = "Heart Disease Status",
       y = "Oldpeak") +
  theme_minimal()

plot(p5)
figure_file = here("results", "figures","oldpeak by heart disease status.png")
ggsave(filename = figure_file, plot=p5)
```

# Create the correlation matrix for selected numeric variables
```{r}
numeric_vars <- cardio_df %>% 
  select(age, restingBP, serumcholestrol, maxheartrate, oldpeak)
cor_matrix <- cor(numeric_vars, use = "pairwise.complete.obs")

# Plot the correlation matrix with ggcorrplot
p6 <- ggcorrplot(cor_matrix, 
           lab = TRUE,                         
           lab_size = 3,                       
           colors = c("blue", "white", "red"),  # Color gradient from blue (negative) to red (positive)
           title = "Correlation Matrix", 
           ggtheme = theme_minimal()) 

plot(p6)
figure_file = here("results", "figures","correlation matrix.png")
ggsave(filename = figure_file, plot=p6) 
```