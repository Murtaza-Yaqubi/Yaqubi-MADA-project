---
title: "Data Processing"
author: "Murtaza Yaqubi"
format:
  html:
    code-fold: true      # Makes code chunks collapsible
    code-tools: true     # Adds copy/download buttons
    echo: true           # THIS is what ensures code is shown
editor: visual
---


```{r}
# Load necessary libraries
library(knitr)
library(readr)
library(dplyr)
library(ggplot2)
library(ggcorrplot)
library(vcd)
library(caret)        # For data partitioning and model training
library(randomForest) # For Random Forest modeling
library(tidyverse)
library(tidymodels)
library(broom)
library(here)           # For file paths
library(pROC)
library(naniar)         # For gg_miss_var()

# Import the dataset
cardio_df <- read_csv(here("data", "raw-data", "Cardiovascular_Disease_Dataset.csv"))

# Basic exploration of the dataset
head(cardio_df)           # View the first few rows
colnames(cardio_df)       # Check column names
dim(cardio_df)            # Check dimensions (should be 1025 rows x 14 columns)
summary(cardio_df)        # Get a summary of the data
glimpse(cardio_df)        # Glimpse at the data structure

# Visualize missing values for each variable
gg_miss_var(cardio_df)    # Display number of NAs

# Transform variables into suitable types and add descriptive labels
cardio_df <- cardio_df %>%
  mutate(
    gender = factor(gender, levels = c(0, 1), labels = c("Female", "Male")), 
    chestpain = factor(chestpain, levels = c(0, 1, 2, 3),
                       labels = c("Typical Angina", "Atypical Angina", "Non-anginal Pain", "Asymptomatic")),
    fastingbloodsugar = factor(fastingbloodsugar, levels = c(0, 1), labels = c("False", "True")),
    restingrelectro = factor(restingrelectro, levels = c(0, 1, 2),
                             labels = c("Normal", "ST-T Abnormality", "Left Ventricular Hypertrophy")),
    exerciseangia = factor(exerciseangia, levels = c(0, 1), labels = c("No", "Yes")),
    slope = factor(slope, levels = c(1, 2, 3), labels = c("Upsloping", "Flat", "Downsloping")),
    target = factor(target, levels = c(0, 1), labels = c("No Heart Disease", "Heart Disease"))
  )

# Print the transformed dataset for verification
print(cardio_df)
```
